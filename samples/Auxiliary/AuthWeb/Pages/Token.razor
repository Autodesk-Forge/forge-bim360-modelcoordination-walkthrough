@*/////////////////////////////////////////////////////////////////////
// Copyright (c) Autodesk, Inc. All rights reserved
//
// Permission to use, copy, modify, and distribute this software in
// object code form for any purpose and without fee is hereby granted,
// provided that the above copyright notice appears in all copies and
// that both that copyright notice and the limited warranty and
// restricted rights notice below appear in all supporting
// documentation.
//
// AUTODESK PROVIDES THIS PROGRAM "AS IS" AND WITH ALL FAULTS.
// AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE.  AUTODESK, INC.
// DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE
// UNINTERRUPTED OR ERROR FREE.
/////////////////////////////////////////////////////////////////////*@
@page "/token"

    @using AuthWeb.Data
    @using Sample.Forge
    @using Sample.Forge.Auth

    @inject ITokenManager tokenManager
    @inject NavigationManager navigationManager
    @inject ILocalFileManager fileManager
    @inject IToastService toastService
    @inject SampleConfiguration currentConfiguration

    <h3>Forge Token</h3>

    @if (token == null)
    {
        <p><em>Loading token...</em></p>
    }
    else
    {
        <div>
            <div class="form-group">
                <label for="accessToken">Auth Token</label>
                <textarea id="accessToken" class="form-control z-depth-1" rows="8" readonly>@token.AccessToken</textarea>
            </div>

            <div class="form-group">
                <label for="expieryu">Expires In (UTC)</label>
                <textarea id="expieryu" class="form-control z-depth-1" rows="1" readonly>@token.ExpiresOn.ToString("u")</textarea>
            </div>

            <div class="form-group">
                <label for="expieryl">Expires In (Local)</label>
                <textarea id="expieryl" class="form-control z-depth-1" rows="1" readonly>@token.ExpiresOn.ToLocalTime().ToString("u")</textarea>
            </div>

            <div class="form-group">
                <label for="refreshToken">Refresh Token</label>
                <textarea id="expiery" class="form-control z-depth-1" rows="1" readonly>@token.Refresh</textarea>
            </div>

            <p>
                <button class="btn btn-primary" @onclick="@SaveToken">
                    Save
                </button>
                <button class="btn btn-primary" @onclick="@RefreshToken">
                    Refresh
                </button>
            </p>
        </div>
    }

    @code {

        private Sample.Forge.Auth.Token token;

        private bool isRefresh;

        protected override async Task OnInitializedAsync()
        {
            token = await tokenManager.GetAccessToken();
        }

        private async Task SaveToken()
        {
            currentConfiguration.AuthToken = token.AccessToken;

            await fileManager.WriteJsonAsync<SampleConfiguration>(currentConfiguration);

            toastService.ShowSuccess("Saved token");
        }

        private async Task RefreshToken()
        {
            token = await tokenManager.GetAccessToken(true);

            currentConfiguration.AuthToken = token.AccessToken;

            toastService.ShowInfo("Token refreshed");
        }
    }
